#!/usr/bin/env ruby

unless name = ARGV[0]
  abort "Please specify a gem name (e.g. brew gem <name> [<dependency>[ <dependency>...]])"
end

version = []
ARGV.each_with_index do |gem_name, i|
  gems = `gem list --remote "^#{gem_name}$"`.lines
  unless gems.detect { |f| f =~ /^#{gem_name} \(([^\s,]+).*\)/ }
    abort "Could not find a valid gem '#{gem_name}'"
  end
  version[i] = $1
end

klass = name.capitalize.gsub(/[-_.\s]([a-zA-Z0-9])/) { $1.upcase }.gsub('+', 'x')

require 'erb'
template = ERB.new(File.read(__FILE__).split(/^__END__$/, 2)[1].strip)

require 'tempfile'
filename = File.join Dir.tmpdir, "#{name}.rb"

begin
  open(filename, 'w') do |f|
    f.puts template.result(binding)
  end

  system "brew install #{filename}"
ensure
  File.unlink filename
end

__END__
require 'formula'

class RubyGemFormula < Formula
  class NoopDownloadStrategy < AbstractDownloadStrategy
    def fetch; end
    def stage; end
  end

  def download_strategy
    NoopDownloadStrategy
  end

  def install
    # set GEM_HOME and GEM_PATH to make sure we package all the dependent gems
    # together without accidently picking up other gems on the gem path since
    # they might not be there if, say, we change to a different rvm gemset
    ENV['GEM_HOME']="#{prefix}"
    ENV['GEM_PATH']="#{prefix}"
<% ARGV.each_with_index do |gem_name, i| %>
    system "gem", "install", "<%= gem_name %>",
             "--version", "<%= version[i] %>",
             "--no-rdoc", "--no-ri",
             "--install-dir", prefix
<% end %>
    bin.rmtree
    bin.mkpath

    ruby_libs = Dir.glob("#{prefix}/gems/*/lib")
    Pathname.glob("#{prefix}/gems/#{name}-#{version}/bin/*").each do |file|
      (bin+file.basename).open('w') do |f|
        f << <<-RUBY
#!/usr/bin/env ruby
ENV['GEM_HOME']="#{prefix}"
$:.unshift(#{ruby_libs.map(&:inspect).join(",")})
load "#{file}"
        RUBY
      end
    end
  end
end

class <%= klass %> < RubyGemFormula
  url "http://rubygems.org/downloads/<%= name %>-<%= version[0] %>.gem"
  homepage "http://rubygems.org/gems/<%= name %>"
end
